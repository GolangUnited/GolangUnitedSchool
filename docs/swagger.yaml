definitions:
  model.CertificateTemplate:
    properties:
      id:
        type: integer
      template:
        type: string
    type: object
  model.CertificateTemplateList:
    properties:
      _metadata:
        $ref: '#/definitions/model.PaginationResponse'
      certificate_templates:
        items:
          $ref: '#/definitions/model.CertificateTemplate'
        type: array
    type: object
  model.Course:
    properties:
      end_date:
        type: string
      id:
        type: integer
      start_date:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  model.CourseList:
    properties:
      _metadata:
        $ref: '#/definitions/model.PaginationResponse'
      courses:
        items:
          $ref: '#/definitions/model.Course'
        type: array
    type: object
  model.CourseUpdate:
    properties:
      end_date:
        type: string
      start_date:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  model.Group:
    properties:
      courseId:
        type: integer
      id:
        type: integer
      mentorId:
        type: integer
      title:
        type: string
    type: object
  model.GroupCU:
    properties:
      mentorId:
        type: integer
      title:
        type: string
    type: object
  model.Homework:
    properties:
      id:
        type: integer
      lecture_id:
        type: integer
      max_score:
        type: number
      task:
        type: string
      title:
        type: string
    type: object
  model.HomeworkList:
    properties:
      _metadata:
        $ref: '#/definitions/model.PaginationResponse'
      homeworks:
        items:
          $ref: '#/definitions/model.Homework'
        type: array
    type: object
  model.Interview:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      mentorID:
        type: integer
      note:
        type: string
      score:
        type: integer
      studentID:
        type: integer
    type: object
  model.Lecture:
    properties:
      id:
        type: integer
      title:
        type: string
    type: object
  model.LectureList:
    properties:
      _metadata:
        $ref: '#/definitions/model.PaginationResponse'
      lectures:
        items:
          $ref: '#/definitions/model.Lecture'
        type: array
    type: object
  model.Operation:
    properties:
      id:
        type: integer
      isLogging:
        type: boolean
      operationType:
        $ref: '#/definitions/model.OperationType'
      title:
        type: string
    type: object
  model.OperationLog:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      operation:
        $ref: '#/definitions/model.Operation'
      personID:
        type: integer
      roleID:
        type: integer
    type: object
  model.OperationType:
    properties:
      id:
        type: integer
      title:
        type: string
    type: object
  model.PaginationResponse:
    properties:
      page:
        type: integer
      page_count:
        type: integer
      page_size:
        type: integer
      total_count:
        type: integer
    type: object
  model.ResponseMessage:
    properties:
      id:
        type: integer
      message:
        type: string
      status:
        type: string
    type: object
  model.Role:
    properties:
      id:
        type: integer
      isReadOnly:
        type: boolean
      roleName:
        type: string
    type: object
  model.RoleCU:
    properties:
      isReadOnly:
        type: boolean
      roleName:
        type: string
    type: object
  model.StudentCertificate:
    properties:
      certificate_template_id:
        type: integer
      course_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      student_id:
        type: integer
    type: object
  model.StudentCertificateList:
    properties:
      _metadata:
        $ref: '#/definitions/model.PaginationResponse'
      student_certificates:
        items:
          $ref: '#/definitions/model.StudentCertificate'
        type: array
    type: object
  model.StudentHomework:
    properties:
      finished_at:
        type: string
      homework_id:
        type: integer
      id:
        type: integer
      score:
        type: number
      started_at:
        type: string
      student_id:
        type: integer
    type: object
  model.StudentHomeworkList:
    properties:
      _metadata:
        $ref: '#/definitions/model.PaginationResponse'
      student_homeworks:
        items:
          $ref: '#/definitions/model.StudentHomework'
        type: array
    type: object
info:
  contact: {}
paths:
  /certificate-templates:
    get:
      operationId: get-all-certificate-templates
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CertificateTemplateList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get all items in the certificate template list
      tags:
      - courses
    post:
      operationId: create-certificate-template
      parameters:
      - description: certificate template
        in: body
        name: certificate_template
        required: true
        schema:
          $ref: '#/definitions/model.CertificateTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: add new certificate template to the certificate template list
      tags:
      - courses
  /certificate-templates/{id}:
    delete:
      operationId: delete-certificate-template-by-id
      parameters:
      - description: certificate template id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: delete a certificate template by ID
      tags:
      - courses
    get:
      operationId: get-certificate-template-by-id
      parameters:
      - description: certificate template id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CertificateTemplate'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get a certificate template by ID
      tags:
      - courses
    put:
      operationId: update-certificate-template-by-id
      parameters:
      - description: certificate template id
        in: path
        name: id
        required: true
        type: string
      - description: certificate template
        in: body
        name: certificate_template
        required: true
        schema:
          $ref: '#/definitions/model.CertificateTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: update a certificate template by ID
      tags:
      - courses
  /course:
    get:
      operationId: get-all-courses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CourseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get all items in the course list
      tags:
      - courses
    post:
      operationId: create-course
      parameters:
      - description: course
        in: body
        name: course
        required: true
        schema:
          $ref: '#/definitions/model.Course'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: add new item to the course list
      tags:
      - courses
  /course/{id}:
    delete:
      operationId: delete-course-by-id
      parameters:
      - description: course id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: delete a course by ID
      tags:
      - courses
    get:
      operationId: get-course-by-id
      parameters:
      - description: course id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Course'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get a course by ID
      tags:
      - courses
    post:
      operationId: update-course-by-id
      parameters:
      - description: course id
        in: path
        name: id
        required: true
        type: string
      - description: course
        in: body
        name: course
        required: true
        schema:
          $ref: '#/definitions/model.CourseUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: update a course by ID
      tags:
      - courses
    put:
      operationId: update-course-by-id
      parameters:
      - description: course id
        in: path
        name: id
        required: true
        type: string
      - description: course
        in: body
        name: course
        required: true
        schema:
          $ref: '#/definitions/model.CourseUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: put a course by ID
      tags:
      - courses
  /courses/{course_id}/certificates:
    get:
      operationId: get-student-certificates-by-course-id
      parameters:
      - description: course id
        in: path
        name: course_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudentCertificateList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get items in the student certificate list by course ID
      tags:
      - courses
      - students
  /group:
    get:
      operationId: get-all-groups
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Group'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get all items in the group list
      tags:
      - groups
    post:
      operationId: create-group
      parameters:
      - description: group
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/model.GroupCU'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: add new item to the group list
      tags:
      - groups
  /group/{id}:
    delete:
      operationId: delete-group-by-id
      parameters:
      - description: group id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: delete a group by ID
      tags:
      - groups
    get:
      operationId: get-group-by-id
      parameters:
      - description: group id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Group'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get a group by ID
      tags:
      - groups
    post:
      operationId: update-group-by-id
      parameters:
      - description: group id
        in: path
        name: id
        required: true
        type: string
      - description: group
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/model.GroupCU'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: update a group by ID
      tags:
      - groups
    put:
      operationId: update-group-by-id
      parameters:
      - description: group id
        in: path
        name: id
        required: true
        type: string
      - description: group
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/model.GroupCU'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: put a group by ID
      tags:
      - groups
  /homeworks:
    get:
      operationId: get-all-homeworks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.HomeworkList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get all items in the homework list
      tags:
      - courses
    post:
      operationId: create-homework
      parameters:
      - description: homework
        in: body
        name: homework
        required: true
        schema:
          $ref: '#/definitions/model.Homework'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: add new homework to the homework list
      tags:
      - courses
  /homeworks/{id}:
    delete:
      operationId: delete-homework-by-id
      parameters:
      - description: homework id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: delete a homework by ID
      tags:
      - courses
    get:
      operationId: get-homework-by-id
      parameters:
      - description: homework id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Homework'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get a homework by ID
      tags:
      - courses
    put:
      operationId: update-homework-by-id
      parameters:
      - description: homework id
        in: path
        name: id
        required: true
        type: string
      - description: homework
        in: body
        name: homework
        required: true
        schema:
          $ref: '#/definitions/model.Homework'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: update a homework by ID
      tags:
      - courses
  /interview:
    get:
      operationId: get-all-interviews
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Interview'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get all items in the interview list
      tags:
      - interviews
    post:
      operationId: create-interview
      parameters:
      - description: interview
        in: body
        name: interview
        required: true
        schema:
          $ref: '#/definitions/model.Interview'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: add new item to the interview list
      tags:
      - interviews
  /interview/{id}:
    delete:
      operationId: delete-interview-by-id
      parameters:
      - description: interview id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: delete a interview by ID
      tags:
      - interviews
    get:
      operationId: get-interview-by-id
      parameters:
      - description: interview id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Interview'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get a interview by ID
      tags:
      - interviews
    post:
      operationId: update-interview-by-id
      parameters:
      - description: interview id
        in: path
        name: id
        required: true
        type: string
      - description: interview
        in: body
        name: interview
        required: true
        schema:
          $ref: '#/definitions/model.Interview'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: update a interview by ID
      tags:
      - interviews
    put:
      operationId: update-interview-by-id
      parameters:
      - description: interview id
        in: path
        name: id
        required: true
        type: string
      - description: interview
        in: body
        name: interview
        required: true
        schema:
          $ref: '#/definitions/model.Interview'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: put a interview by ID
      tags:
      - interviews
  /lectures:
    get:
      operationId: get-all-lectures
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LectureList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get all items in the lecture list
      tags:
      - courses
    post:
      operationId: create-lecture
      parameters:
      - description: lecture
        in: body
        name: lecture
        required: true
        schema:
          $ref: '#/definitions/model.Lecture'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: add new lecture to the lecture list
      tags:
      - courses
  /lectures/{id}:
    delete:
      operationId: delete-lecture-by-id
      parameters:
      - description: lecture id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: delete a lecture by ID
      tags:
      - courses
    get:
      operationId: get-lecture-by-id
      parameters:
      - description: lecture id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Lecture'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get a lecture by ID
      tags:
      - courses
    put:
      operationId: update-lecture-by-id
      parameters:
      - description: lecture id
        in: path
        name: id
        required: true
        type: string
      - description: lecture
        in: body
        name: lecture
        required: true
        schema:
          $ref: '#/definitions/model.Lecture'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: update a lecture by ID
      tags:
      - courses
  /lectures/{lecture_id}/homeworks:
    get:
      operationId: get-homeworks-by-lecture-id
      parameters:
      - description: lecture id
        in: path
        name: lecture_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.HomeworkList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get items in the homework list by lecture ID
      tags:
      - courses
  /operation:
    get:
      operationId: get-all-operations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Operation'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get all items in the operations list
      tags:
      - operations
    post:
      operationId: create-operation
      parameters:
      - description: operation
        in: body
        name: operation
        required: true
        schema:
          $ref: '#/definitions/model.Operation'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: add new item to the operations list
      tags:
      - operations
  /operation-log:
    get:
      operationId: get-all-operation-logs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.OperationLog'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get all items in the operation log list
      tags:
      - operation-logs
    post:
      operationId: create-operation-log
      parameters:
      - description: operation-log
        in: body
        name: operation-log
        required: true
        schema:
          $ref: '#/definitions/model.OperationLog'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: add new item to the operation logs list
      tags:
      - operation-logs
  /operation-log/{id}:
    delete:
      operationId: delete-operation-log-by-id
      parameters:
      - description: operation log id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: delete a operation log by ID
      tags:
      - operation-logs
    get:
      operationId: get-operation-log-by-id
      parameters:
      - description: operation-log id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.OperationLog'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get a operation log by ID
      tags:
      - operation-logs
    post:
      operationId: update-operation-log-by-id
      parameters:
      - description: operation log id
        in: path
        name: id
        required: true
        type: string
      - description: role
        in: body
        name: log
        required: true
        schema:
          $ref: '#/definitions/model.OperationLog'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: update a operation log by ID
      tags:
      - operation-logs
    put:
      operationId: update-operation-log-by-id
      parameters:
      - description: operation log id
        in: path
        name: id
        required: true
        type: string
      - description: role
        in: body
        name: log
        required: true
        schema:
          $ref: '#/definitions/model.OperationLog'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: put a operation log by ID
      tags:
      - operation-logs
  /operation-type:
    get:
      operationId: get-all-operation-types
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.OperationType'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get all items in the operation type list
      tags:
      - operation-types
    post:
      operationId: create-operation-type
      parameters:
      - description: operation-type
        in: body
        name: operation-type
        required: true
        schema:
          $ref: '#/definitions/model.OperationType'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: add new item to the operation types list
      tags:
      - operation-types
  /operation-type/{id}:
    delete:
      operationId: delete-operation-type-by-id
      parameters:
      - description: operation type id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: delete a operation type by ID
      tags:
      - operation-types
    get:
      operationId: get-operation-type-by-id
      parameters:
      - description: operation-type id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.OperationType'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get a operation type by ID
      tags:
      - operation-types
    post:
      operationId: update-operation-type-by-id
      parameters:
      - description: operation type id
        in: path
        name: id
        required: true
        type: string
      - description: role
        in: body
        name: type
        required: true
        schema:
          $ref: '#/definitions/model.OperationType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: update a operation type by ID
      tags:
      - operation-types
    put:
      operationId: update-operation-type-by-id
      parameters:
      - description: operation type id
        in: path
        name: id
        required: true
        type: string
      - description: role
        in: body
        name: type
        required: true
        schema:
          $ref: '#/definitions/model.OperationType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: put a operation type by ID
      tags:
      - operation-types
  /operation/{id}:
    delete:
      operationId: delete-operation-by-id
      parameters:
      - description: operation id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: delete a operation by ID
      tags:
      - operations
    get:
      operationId: get-operation-by-id
      parameters:
      - description: operation id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Operation'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get a operation by ID
      tags:
      - operations
    post:
      operationId: update-operation-by-id
      parameters:
      - description: operation id
        in: path
        name: id
        required: true
        type: string
      - description: role
        in: body
        name: operation
        required: true
        schema:
          $ref: '#/definitions/model.Operation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: update a operation by ID
      tags:
      - operations
    put:
      operationId: update-operation-by-id
      parameters:
      - description: operation id
        in: path
        name: id
        required: true
        type: string
      - description: role
        in: body
        name: operation
        required: true
        schema:
          $ref: '#/definitions/model.Operation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: put a operation by ID
      tags:
      - operations
  /role:
    get:
      operationId: get-all-roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Role'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get all items in the role list
      tags:
      - roles
    post:
      operationId: create-role
      parameters:
      - description: role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.RoleCU'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: add new role to the course list
      tags:
      - roles
  /role/{id}:
    delete:
      operationId: delete-role-by-id
      parameters:
      - description: role id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: delete a role by ID
      tags:
      - roles
    get:
      operationId: get-role-by-id
      parameters:
      - description: role id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Role'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get a role by ID
      tags:
      - roles
    post:
      operationId: update-role-by-id
      parameters:
      - description: role id
        in: path
        name: id
        required: true
        type: string
      - description: role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.RoleCU'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: update a role by ID
      tags:
      - roles
    put:
      operationId: put-role-by-id
      parameters:
      - description: role id
        in: path
        name: id
        required: true
        type: string
      - description: role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: put a role by ID
      tags:
      - roles
  /student-certificates:
    get:
      operationId: get-all-student-certificates
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudentCertificateList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get all items in the student certificate list
      tags:
      - students
    post:
      operationId: create-student-certificate
      parameters:
      - description: student certificate
        in: body
        name: student_certificate
        required: true
        schema:
          $ref: '#/definitions/model.StudentCertificate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: add new student certificate to the student certificate list
      tags:
      - courses
  /student-certificates/{id}:
    delete:
      operationId: delete-student-certificate-by-id
      parameters:
      - description: student certificate id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: delete a student certificate by ID
      tags:
      - courses
    get:
      operationId: get-student-certificate-by-id
      parameters:
      - description: student certificate id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudentCertificate'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get a student certificate by ID
      tags:
      - students
    put:
      operationId: update-student-certificate-by-id
      parameters:
      - description: student certificate id
        in: path
        name: id
        required: true
        type: string
      - description: student certificate
        in: body
        name: student_certificate
        required: true
        schema:
          $ref: '#/definitions/model.StudentCertificate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: update a student certificate by ID
      tags:
      - courses
  /student-homeworks:
    get:
      operationId: get-all-student-homeworks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudentHomeworkList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get all items in the student homework list
      tags:
      - students
    post:
      operationId: create-student-homework
      parameters:
      - description: student homework
        in: body
        name: student_homework
        required: true
        schema:
          $ref: '#/definitions/model.StudentHomework'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: add new student homework to the student homework list
      tags:
      - students
  /student-homeworks/{id}:
    delete:
      operationId: delete-student-homework-by-id
      parameters:
      - description: student homework id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: delete a student homework by ID
      tags:
      - students
    get:
      operationId: get-student-homework-by-id
      parameters:
      - description: student homework id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudentHomework'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get a student homework by ID
      tags:
      - students
    put:
      operationId: update-student-homework-by-id
      parameters:
      - description: student homework id
        in: path
        name: id
        required: true
        type: string
      - description: student homework
        in: body
        name: student_homework
        required: true
        schema:
          $ref: '#/definitions/model.StudentHomework'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: update a student homework by ID
      tags:
      - students
  /students/{student_id}/certificates:
    get:
      operationId: get-student-certificates-by-student-id
      parameters:
      - description: student id
        in: path
        name: student_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudentCertificateList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get items in the student certificate list by student ID
      tags:
      - students
  /students/{student_id}/homeworks:
    get:
      operationId: get-student-homeworks-by-student-id
      parameters:
      - description: student id
        in: path
        name: student_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudentHomeworkList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseMessage'
      summary: get items in the student homework list by student ID
      tags:
      - students
swagger: "2.0"
