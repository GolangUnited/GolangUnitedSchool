// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/course": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group_contact"
                ],
                "summary": "add new group contact",
                "operationId": "add-group-contact",
                "parameters": [
                    {
                        "description": "course",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GroupContactAddDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/course/contact/{group_contact_id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group_contact"
                ],
                "summary": "delete group contact by id",
                "operationId": "delete-group-contact-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group_contact_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/course/lecture": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "course_lecture"
                ],
                "summary": "get all course lectures",
                "operationId": "get-all-course-lectures",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CourseLectureListDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "course_lecture"
                ],
                "summary": "add new course lecture",
                "operationId": "add-course-lecture-by-id",
                "parameters": [
                    {
                        "description": "course_lecture",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CourseLecture"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/course/lecture/{course_lecture_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "course_lecture"
                ],
                "summary": "get a course lecture by id",
                "operationId": "get-course-lecture-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course_lecture_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CourseLecture"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "course_lecture"
                ],
                "summary": "update course lecture by id",
                "operationId": "update-course-lecture-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course_lecture_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "course_lecture",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CourseLecture"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "course_lecture"
                ],
                "summary": "delete a course lecture by id",
                "operationId": "delete-course-lecture-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course_lecture_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/course/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "get a course by ID",
                "operationId": "get-course_by_id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Course"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "update a course by ID",
                "operationId": "update-course-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "delete a course by ID",
                "operationId": "delete-course-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/courses": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "get all items in the course list",
                "operationId": "get-all-courses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CourseList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/group/contact": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group_contact"
                ],
                "summary": "get all group contacts",
                "operationId": "get-all-group-contacts",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.GroupContactListDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/group/contact/{group_contact_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group_contact"
                ],
                "summary": "get group contact by id",
                "operationId": "get-group-contact-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group_contact_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GroupContact"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group_contact"
                ],
                "summary": "update group contact",
                "operationId": "update-group-contact-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group_contact_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "group contact",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GroupContactAddDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/group/students": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_group"
                ],
                "summary": "get all student groups",
                "operationId": "get-student-groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StudentGroupListDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_group"
                ],
                "summary": "add new course to the course list",
                "operationId": "add-student-group",
                "parameters": [
                    {
                        "description": "student_group",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.StudentGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/group/students/{group_id}": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_group"
                ],
                "summary": "update student group by group id",
                "operationId": "update-student-group-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "student_group",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.StudentGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_group"
                ],
                "summary": "delete student group by id",
                "operationId": "delete-student-group-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/group/students{group_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_group"
                ],
                "summary": "get student group by id",
                "operationId": "get_student_group_by_id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StudentGroup"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/mentors": {
            "get": {
                "description": "получить список всех менторов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentors"
                ],
                "summary": "get all mentors",
                "operationId": "get-all-mentors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MentorsListDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/mentors/notes": {
            "get": {
                "description": "получить все заметки всех менторов про всех студентов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentor_notes"
                ],
                "summary": "get all mentor notes",
                "operationId": "get-all-mentor-notes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MentorNotesListDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/mentors/notes/": {
            "put": {
                "description": "изменить менторскую заметку",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentor_notes"
                ],
                "summary": "update mentor note",
                "operationId": "update-mentor-note",
                "parameters": [
                    {
                        "description": "update_mentor_note",
                        "name": "mentor_note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MentorNote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "добавить менторскую заметку для студента",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentor_notes"
                ],
                "summary": "add new mentor note",
                "operationId": "add-mentor-note",
                "parameters": [
                    {
                        "description": "new_mentor_note",
                        "name": "mentor_note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NewMentorNoteDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/mentors/notes/{mentor_note_id}": {
            "delete": {
                "description": "удалить заметку ментора",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentor_notes"
                ],
                "summary": "delete mentor note",
                "operationId": "delete-note-from-mentor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mentor_note_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/mentors/{mentor_id}": {
            "get": {
                "description": "получить данные о менторе по его id, выдает структуру person",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentors"
                ],
                "summary": "get mentor by mentor id",
                "operationId": "get-mentor-by-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Person"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "удалить пользователя из группы менторов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentors"
                ],
                "summary": "delete mentor by mentor id",
                "operationId": "delete-mentor-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mentor_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/mentors/{mentor_id}/notes": {
            "get": {
                "description": "получить все заметки, оставленные конкретным ментором",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentor_notes"
                ],
                "summary": "get all notes from concrete mentor",
                "operationId": "get-all-notes-from-mentor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mentor_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MentorNotesListDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/mentors/{mentor_id}/notes/{mentor_note_id}": {
            "get": {
                "description": "получить определенную заметку, оставленную ментором",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentor_notes"
                ],
                "summary": "get concrete note of mentor",
                "operationId": "get-note-from-mentor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mentor_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "mentor_note_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MentorNotesListDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/mentors/{person_id}": {
            "post": {
                "description": "добавить пользователя в группу менторов по его person_id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentors"
                ],
                "summary": "add mentor",
                "operationId": "add-mentor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "person_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/person": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "get all person from database",
                "operationId": "get-persons",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PersonListDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "add new person to database",
                "operationId": "add-new-person",
                "parameters": [
                    {
                        "description": "person",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NewPersonDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/person/{person_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "get person by id",
                "operationId": "get-person-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "person id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Person"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "update person by id",
                "operationId": "update-person-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "person",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Person"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "delete person by id",
                "operationId": "delete-person-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "person id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/student/{person_id}": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "add person to students",
                "operationId": "cadd-person-to-students",
                "parameters": [
                    {
                        "type": "string",
                        "description": "person_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/student/{student_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "get student by student id",
                "operationId": "get-student-by-student-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "student_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Course"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "update student by student id",
                "operationId": "update-student-by-student-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "student_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "delete person from students",
                "operationId": "delete-person-from-students",
                "parameters": [
                    {
                        "type": "string",
                        "description": "student_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/students": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "get all students",
                "operationId": "get-all-students",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CourseList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/students/notes/types": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_note_types"
                ],
                "summary": "get list of student note types",
                "operationId": "get-all-student-note-types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StudentNoteTypesListDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_note_types"
                ],
                "summary": "add new student type note",
                "operationId": "create-note-types",
                "parameters": [
                    {
                        "description": "student note type",
                        "name": "new_student_note_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NewStudentNoteTypeDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/students/notes/types/{student_note_type_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_note_types"
                ],
                "summary": "get student note type by id",
                "operationId": "get-student-student-note-type-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student_note_type_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StudentNoteType"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_note_types"
                ],
                "summary": "update student note type",
                "operationId": "update-student-note-type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "student_note_type_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "student note type",
                        "name": "student_note_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.StudentNoteType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "удаляет тип заметки студента по id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_note_types"
                ],
                "summary": "delete student note type by id",
                "operationId": "delete-student-note-type-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "student_note_type_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/students/notes/{student_note_id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_notes"
                ],
                "summary": "delete student note",
                "operationId": "delete-student-note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "student_note_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/students/{student_id}/notes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_notes"
                ],
                "summary": "get all student notes by student id",
                "operationId": "get-student-notes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "student_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StudentNotesListDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_notes"
                ],
                "summary": "add new note to student",
                "operationId": "add-new-student-note",
                "parameters": [
                    {
                        "description": "student_note",
                        "name": "student_note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NewStudentNoteDto"
                        }
                    },
                    {
                        "type": "string",
                        "description": "student_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/students/{student_id}/notes/{student_note_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_notes"
                ],
                "summary": "get concrete student's note from concrete student",
                "operationId": "get-student-note-by-student-note-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "student_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "student_note_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StudentNote"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_notes"
                ],
                "summary": "update student note",
                "operationId": "update-student-note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "student_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "student_note_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "student_note",
                        "name": "student_note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NewStudentNoteDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Course": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.CourseLecture": {
            "type": "object",
            "properties": {
                "course_id": {
                    "type": "integer"
                },
                "lecture_id": {
                    "type": "integer"
                }
            }
        },
        "model.CourseLectureListDto": {
            "type": "object",
            "properties": {
                "_metadata": {
                    "$ref": "#/definitions/model.PaginationResponse"
                },
                "course_lectures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CourseLecture"
                    }
                }
            }
        },
        "model.CourseList": {
            "type": "object",
            "properties": {
                "_metadata": {
                    "$ref": "#/definitions/model.PaginationResponse"
                },
                "courses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Course"
                    }
                }
            }
        },
        "model.GroupContact": {
            "type": "object",
            "required": [
                "is_primary"
            ],
            "properties": {
                "contact_type_id": {
                    "type": "integer",
                    "maximum": 7
                },
                "contact_value": {
                    "type": "string",
                    "maxLength": 70,
                    "minLength": 2
                },
                "group_contact_id": {
                    "type": "integer"
                },
                "group_id": {
                    "type": "integer"
                },
                "is_primary": {
                    "type": "boolean"
                }
            }
        },
        "model.GroupContactAddDto": {
            "type": "object",
            "required": [
                "is_primary"
            ],
            "properties": {
                "contact_type_id": {
                    "type": "integer",
                    "maximum": 7
                },
                "contact_value": {
                    "type": "string",
                    "maxLength": 70,
                    "minLength": 2
                },
                "group_id": {
                    "type": "integer"
                },
                "is_primary": {
                    "type": "boolean"
                }
            }
        },
        "model.GroupContactListDto": {
            "type": "object",
            "properties": {
                "_metadata": {
                    "$ref": "#/definitions/model.PaginationResponse"
                },
                "groupContacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GroupContact"
                    }
                }
            }
        },
        "model.Mentor": {
            "type": "object",
            "properties": {
                "mentor_id": {
                    "type": "integer"
                }
            }
        },
        "model.MentorNote": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "mentor_id": {
                    "type": "integer"
                },
                "mentor_note_id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "model.MentorNotesListDto": {
            "type": "object",
            "properties": {
                "mentorNoteList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MentorNote"
                    }
                }
            }
        },
        "model.MentorsListDto": {
            "type": "object",
            "properties": {
                "mentorList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Mentor"
                    }
                }
            }
        },
        "model.NewMentorNoteDto": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "mentor_id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "model.NewPersonDto": {
            "type": "object",
            "properties": {
                "firsName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "passwd": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "roleId": {
                    "type": "string"
                }
            }
        },
        "model.NewStudentNoteDto": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "note": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                }
            }
        },
        "model.NewStudentNoteTypeDto": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 2
                }
            }
        },
        "model.PaginationResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_count": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "model.Person": {
            "type": "object",
            "required": [
                "first_name",
                "last_name",
                "login",
                "passwd",
                "role_id"
            ],
            "properties": {
                "deleted": {
                    "type": "boolean"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                },
                "login": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                },
                "passwd": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 8
                },
                "patronymic": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                },
                "person_id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer",
                    "maximum": 6,
                    "minimum": 1
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.PersonListDto": {
            "type": "object",
            "properties": {
                "_metadata": {
                    "$ref": "#/definitions/model.PaginationResponse"
                },
                "persons_dto": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Person"
                    }
                }
            }
        },
        "model.ResponseMessage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.StudentGroup": {
            "type": "object",
            "properties": {
                "group_id": {
                    "type": "integer"
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "model.StudentGroupListDto": {
            "type": "object",
            "properties": {
                "_metadata": {
                    "$ref": "#/definitions/model.PaginationResponse"
                },
                "student_group_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.StudentGroup"
                    }
                }
            }
        },
        "model.StudentNote": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "note": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                },
                "student_id": {
                    "type": "integer"
                },
                "student_note_id": {
                    "type": "integer"
                },
                "student_note_type_id": {
                    "type": "integer"
                }
            }
        },
        "model.StudentNoteType": {
            "type": "object",
            "properties": {
                "student_note_type_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 2
                }
            }
        },
        "model.StudentNoteTypesListDto": {
            "type": "object",
            "properties": {
                "studentNoteTypeList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.StudentNoteType"
                    }
                }
            }
        },
        "model.StudentNotesListDto": {
            "type": "object",
            "properties": {
                "studentId": {
                    "type": "integer"
                },
                "studentNoteList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.StudentNote"
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/api/v1",
	Schemes:     []string{"http"},
	Title:       "GolangUnitedSchool",
	Description: "### _API for student info collection service._",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
