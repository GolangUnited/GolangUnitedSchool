{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "### _API for student info collection service._",
        "title": "GolangUnitedSchool",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/courses": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "get all items in the course list",
                "operationId": "get-all-courses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CourseList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "add new course to the course list",
                "operationId": "create-course",
                "parameters": [
                    {
                        "description": "course",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Course"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/courses/lectures": {
            "get": {
                "description": "возвращает список всех лекций всех курсов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses",
                    "courseLectures"
                ],
                "summary": "get all course lectures",
                "operationId": "get-all-course-lectures",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CourseLecturesListDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "добавить новую лекцию на курс",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses",
                    "courseLectures"
                ],
                "summary": "add new course lecture",
                "operationId": "add-course-lecture-by-id",
                "parameters": [
                    {
                        "description": "course_lecture",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CourseLecture"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/courses/lectures/{lecture_id}": {
            "put": {
                "description": "отредактировать лекцию курса с указанным lecture_id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses",
                    "courseLectures"
                ],
                "summary": "update course lecture by id",
                "operationId": "update-course-lecture-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "lecture_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "course_lecture",
                        "name": "lecture",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CourseLecture"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "удалить лекцию с указанным lecture_id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses",
                    "courseLectures"
                ],
                "summary": "delete a course lecture by id",
                "operationId": "delete-course-lecture-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course_lecture_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/courses/statuses": {
            "get": {
                "description": "возвращает список всех статусов курса",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses",
                    "courseStatuses"
                ],
                "summary": "get all course statuses",
                "operationId": "get-all-course-statuses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CourseStatusesListDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "создает новый статус курса",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses",
                    "courseStatuses"
                ],
                "summary": "add new course status",
                "operationId": "add-course-status",
                "parameters": [
                    {
                        "description": "new_course_status",
                        "name": "new_course_status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CourseStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/courses/statuses/{status_id}": {
            "get": {
                "description": "возвращает статус курса с status_id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses",
                    "courseStatuses"
                ],
                "summary": "get course status by id",
                "operationId": "get-course-status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "status_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CourseStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "изменяет статус курса с указанным status_id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses",
                    "courseStatuses"
                ],
                "summary": "update course status",
                "operationId": "put-course-status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "status_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "удаляет статус курса с указанным status_id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses",
                    "courseStatuses"
                ],
                "summary": "delete course status",
                "operationId": "delete-course-status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "status_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/courses/{course_id}/lectures": {
            "get": {
                "description": "возвращает все лекции определенного курса",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses",
                    "courseLectures"
                ],
                "summary": "get a course lecture by id",
                "operationId": "get-course-lectures-by-course-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CourseLecturesListDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/courses/{course_id}/lectures/{lecture_id}": {
            "get": {
                "description": "возвращает лекцию с указанным lecture_id с курса course_id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses",
                    "courseLectures"
                ],
                "summary": "get concrete lecture from course",
                "operationId": "get-lecture-by-id-from-course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course_id",
                        "name": "course_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "lecture_id",
                        "name": "lecture_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CourseLecture"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/courses/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "get a course by ID",
                "operationId": "get-course_by_id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Course"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "update a course by ID",
                "operationId": "update-course-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "delete a course by ID",
                "operationId": "delete-course-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/groups/contacts": {
            "get": {
                "description": "возвращает все контакты всех группы",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups",
                    "groupContacts"
                ],
                "summary": "get all group contacts",
                "operationId": "get-all-groups-contacts",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.GroupContactsListDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "добавляет новый контакт группы",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups",
                    "groupContacts"
                ],
                "summary": "add new group contact",
                "operationId": "add-group-contact",
                "parameters": [
                    {
                        "description": "group contact",
                        "name": "contact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GroupContactsAddDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/groups/contacts/{group_contact_id}": {
            "put": {
                "description": "изменяет контакт группы",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups",
                    "groupContacts"
                ],
                "summary": "update group contact",
                "operationId": "update-group-contact-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group_contact_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "group contact",
                        "name": "contact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GroupContactsAddDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "удаляет контакт группы",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups",
                    "groupContacts"
                ],
                "summary": "delete group contact by id",
                "operationId": "delete-group-contact-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group_contact_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/groups/{group_id}/contacts": {
            "get": {
                "description": "возвращает все контакты группы с указанным group_id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups",
                    "groupContacts"
                ],
                "summary": "get group contacts by  group id",
                "operationId": "get-group-contacts-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GroupContactsListDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/groups/{group_id}/contacts/{group_contact_id}": {
            "get": {
                "description": "возвращает контакт group_contact_id группы с group_id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups",
                    "groupContacts"
                ],
                "summary": "get group contact",
                "operationId": "get-group-contact",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "group_contact_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GroupContact"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/mentors": {
            "get": {
                "description": "получить список всех менторов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentors"
                ],
                "summary": "get all mentors",
                "operationId": "get-all-mentors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MentorsListDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/mentors/notes": {
            "get": {
                "description": "получить все заметки всех менторов про всех студентов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentor_notes"
                ],
                "summary": "get all mentor notes",
                "operationId": "get-all-mentor-notes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MentorNotesListDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/mentors/notes/": {
            "put": {
                "description": "изменить менторскую заметку",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentor_notes"
                ],
                "summary": "update mentor note",
                "operationId": "update-mentor-note",
                "parameters": [
                    {
                        "description": "update_mentor_note",
                        "name": "mentor_note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MentorNote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "добавить менторскую заметку для студента",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentor_notes"
                ],
                "summary": "add new mentor note",
                "operationId": "add-mentor-note",
                "parameters": [
                    {
                        "description": "new_mentor_note",
                        "name": "mentor_note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NewMentorNoteDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/mentors/notes/{mentor_note_id}": {
            "delete": {
                "description": "удалить заметку ментора",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentor_notes"
                ],
                "summary": "delete mentor note",
                "operationId": "delete-note-from-mentor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mentor_note_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/mentors/{mentor_id}": {
            "get": {
                "description": "получить данные о менторе по его id, выдает структуру person",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentors"
                ],
                "summary": "get mentor by mentor id",
                "operationId": "get-mentor-by-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Person"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "удалить пользователя из группы менторов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentors"
                ],
                "summary": "delete mentor by mentor id",
                "operationId": "delete-mentor-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mentor_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/mentors/{mentor_id}/notes": {
            "get": {
                "description": "получить все заметки, оставленные конкретным ментором",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentor_notes"
                ],
                "summary": "get all notes from concrete mentor",
                "operationId": "get-all-notes-from-mentor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mentor_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MentorNotesListDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/mentors/{mentor_id}/notes/{mentor_note_id}": {
            "get": {
                "description": "получить определенную заметку, оставленную ментором",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentor_notes"
                ],
                "summary": "get concrete note of mentor",
                "operationId": "get-note-from-mentor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mentor_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "mentor_note_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MentorNotesListDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/mentors/{person_id}": {
            "post": {
                "description": "добавить пользователя в группу менторов по его person_id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentors"
                ],
                "summary": "add mentor",
                "operationId": "add-mentor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "person_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/persons": {
            "get": {
                "description": "возвращает список всех пользователей",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persons"
                ],
                "summary": "get all person from database",
                "operationId": "get-persons",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PersonListDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "добавляет нового пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persons"
                ],
                "summary": "add new person to database",
                "operationId": "add-new-person",
                "parameters": [
                    {
                        "description": "person",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NewPersonDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/persons/{person_id}": {
            "get": {
                "description": "возвращает данные о пользователе с указанным id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persons"
                ],
                "summary": "get person by id",
                "operationId": "get-person-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "person_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Person"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "изменяет данные пользователя с указанным id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persons"
                ],
                "summary": "update person by id",
                "operationId": "update-person-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "person_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "person",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Person"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "удаляет пользователя с указанным id\u003c",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persons"
                ],
                "summary": "delete person by id",
                "operationId": "delete-person-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "person_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/students": {
            "get": {
                "description": "возвращает список всех пользователей группы \"student\"",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "get all students",
                "operationId": "get-all-students",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StudentsListDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/students/groups": {
            "get": {
                "description": "возвращает список всех студенческих групп",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students",
                    "studentGroups"
                ],
                "summary": "get all student groups",
                "operationId": "get-student-groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StudentGroupListDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "добавляет новую студенческую группу",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students",
                    "studentGroups"
                ],
                "summary": "add new student group",
                "operationId": "add-student-group",
                "parameters": [
                    {
                        "description": "student_group",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.StudentGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/students/groups/{group_id}": {
            "get": {
                "description": "возвращает группу с указанным id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students",
                    "studentGroups"
                ],
                "summary": "get student group by id",
                "operationId": "get_student_group_by_id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StudentGroup"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "изменяет данные студенческой группы",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students",
                    "studentGroups"
                ],
                "summary": "update student group by group id",
                "operationId": "update-student-group-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "student_group",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.StudentGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "удаляет студенческую группу с указанным id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students",
                    "studentGroups"
                ],
                "summary": "delete student group by id",
                "operationId": "delete-student-group-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/students/notes/types": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_note_types"
                ],
                "summary": "get list of student note types",
                "operationId": "get-all-student-note-types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StudentNoteTypesListDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_note_types"
                ],
                "summary": "add new student type note",
                "operationId": "create-note-types",
                "parameters": [
                    {
                        "description": "student note type",
                        "name": "new_student_note_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NewStudentNoteTypeDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/students/notes/types/{student_note_type_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_note_types"
                ],
                "summary": "get student note type by id",
                "operationId": "get-student-student-note-type-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student_note_type_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StudentNoteType"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_note_types"
                ],
                "summary": "update student note type",
                "operationId": "update-student-note-type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "student_note_type_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "student note type",
                        "name": "student_note_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.StudentNoteType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "удаляет тип заметки студента по id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_note_types"
                ],
                "summary": "delete student note type by id",
                "operationId": "delete-student-note-type-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "student_note_type_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/students/notes/{student_note_id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_notes"
                ],
                "summary": "delete student note",
                "operationId": "delete-student-note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "student_note_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/students/{person_id}": {
            "post": {
                "description": "добавить пользователя в группу студентов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "add person to students",
                "operationId": "add-person-to-students",
                "parameters": [
                    {
                        "type": "string",
                        "description": "person_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/students/{student_id}": {
            "get": {
                "description": "получить данные о студенте по его id, возвращает структуру person",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "get student by student id",
                "operationId": "get-student-by-student-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "student_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Person"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "пока не слишком понятно, нужен ли этот хендлер",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "update student by student id",
                "operationId": "update-student-by-student-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "student_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "удалить пользователя с указанным id is группы \"студенты\"",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "delete person from students",
                "operationId": "delete-person-from-students",
                "parameters": [
                    {
                        "type": "string",
                        "description": "student_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/students/{student_id}/notes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_notes"
                ],
                "summary": "get all student notes by student id",
                "operationId": "get-student-notes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "student_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StudentNotesListDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_notes"
                ],
                "summary": "add new note to student",
                "operationId": "add-new-student-note",
                "parameters": [
                    {
                        "description": "student_note",
                        "name": "student_note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NewStudentNoteDto"
                        }
                    },
                    {
                        "type": "string",
                        "description": "student_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/students/{student_id}/notes/{student_note_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_notes"
                ],
                "summary": "get concrete student's note from concrete student",
                "operationId": "get-student-note-by-student-note-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "student_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "student_note_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StudentNote"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student_notes"
                ],
                "summary": "update student note",
                "operationId": "update-student-note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "student_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "student_note_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "student_note",
                        "name": "student_note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NewStudentNoteDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Course": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.CourseLecture": {
            "type": "object",
            "properties": {
                "course_id": {
                    "type": "integer"
                },
                "lecture_id": {
                    "type": "integer"
                }
            }
        },
        "model.CourseLecturesListDto": {
            "type": "object",
            "properties": {
                "_metadata": {
                    "$ref": "#/definitions/model.PaginationResponse"
                },
                "course_lectures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CourseLecture"
                    }
                }
            }
        },
        "model.CourseList": {
            "type": "object",
            "properties": {
                "_metadata": {
                    "$ref": "#/definitions/model.PaginationResponse"
                },
                "courses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Course"
                    }
                }
            }
        },
        "model.CourseStatus": {
            "type": "object",
            "properties": {
                "course_status_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 2
                }
            }
        },
        "model.CourseStatusesListDto": {
            "type": "object",
            "properties": {
                "_metadata": {
                    "$ref": "#/definitions/model.PaginationResponse"
                },
                "courseStatusList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CourseStatus"
                    }
                }
            }
        },
        "model.GroupContact": {
            "type": "object",
            "required": [
                "is_primary"
            ],
            "properties": {
                "contact_type_id": {
                    "type": "integer",
                    "maximum": 7
                },
                "contact_value": {
                    "type": "string",
                    "maxLength": 70,
                    "minLength": 2
                },
                "group_contact_id": {
                    "type": "integer"
                },
                "group_id": {
                    "type": "integer"
                },
                "is_primary": {
                    "type": "boolean"
                }
            }
        },
        "model.GroupContactsAddDto": {
            "type": "object",
            "required": [
                "is_primary"
            ],
            "properties": {
                "contact_type_id": {
                    "type": "integer",
                    "maximum": 7
                },
                "contact_value": {
                    "type": "string",
                    "maxLength": 70,
                    "minLength": 2
                },
                "group_id": {
                    "type": "integer"
                },
                "is_primary": {
                    "type": "boolean"
                }
            }
        },
        "model.GroupContactsListDto": {
            "type": "object",
            "properties": {
                "_metadata": {
                    "$ref": "#/definitions/model.PaginationResponse"
                },
                "groupContacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GroupContact"
                    }
                }
            }
        },
        "model.Mentor": {
            "type": "object",
            "properties": {
                "mentor_id": {
                    "type": "integer"
                }
            }
        },
        "model.MentorNote": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "mentor_id": {
                    "type": "integer"
                },
                "mentor_note_id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "model.MentorNotesListDto": {
            "type": "object",
            "properties": {
                "mentorNoteList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MentorNote"
                    }
                }
            }
        },
        "model.MentorsListDto": {
            "type": "object",
            "properties": {
                "mentorList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Mentor"
                    }
                }
            }
        },
        "model.NewMentorNoteDto": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "mentor_id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "model.NewPersonDto": {
            "type": "object",
            "properties": {
                "firsName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "passwd": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "roleId": {
                    "type": "string"
                }
            }
        },
        "model.NewStudentNoteDto": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "note": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                }
            }
        },
        "model.NewStudentNoteTypeDto": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 2
                }
            }
        },
        "model.PaginationResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_count": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "model.Person": {
            "type": "object",
            "required": [
                "first_name",
                "last_name",
                "login",
                "passwd",
                "role_id"
            ],
            "properties": {
                "deleted": {
                    "type": "boolean"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                },
                "login": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                },
                "passwd": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 8
                },
                "patronymic": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                },
                "person_id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer",
                    "maximum": 6,
                    "minimum": 1
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.PersonListDto": {
            "type": "object",
            "properties": {
                "_metadata": {
                    "$ref": "#/definitions/model.PaginationResponse"
                },
                "persons_dto": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Person"
                    }
                }
            }
        },
        "model.ResponseMessage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.Student": {
            "type": "object",
            "required": [
                "student_id"
            ],
            "properties": {
                "student_id": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "model.StudentGroup": {
            "type": "object",
            "properties": {
                "group_id": {
                    "type": "integer"
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "model.StudentGroupListDto": {
            "type": "object",
            "properties": {
                "_metadata": {
                    "$ref": "#/definitions/model.PaginationResponse"
                },
                "student_group_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.StudentGroup"
                    }
                }
            }
        },
        "model.StudentNote": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "note": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                },
                "student_id": {
                    "type": "integer"
                },
                "student_note_id": {
                    "type": "integer"
                },
                "student_note_type_id": {
                    "type": "integer"
                }
            }
        },
        "model.StudentNoteType": {
            "type": "object",
            "properties": {
                "student_note_type_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 2
                }
            }
        },
        "model.StudentNoteTypesListDto": {
            "type": "object",
            "properties": {
                "studentNoteTypeList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.StudentNoteType"
                    }
                }
            }
        },
        "model.StudentNotesListDto": {
            "type": "object",
            "properties": {
                "studentId": {
                    "type": "integer"
                },
                "studentNoteList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.StudentNote"
                    }
                }
            }
        },
        "model.StudentsListDto": {
            "type": "object",
            "properties": {
                "studentList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Student"
                    }
                }
            }
        }
    }
}